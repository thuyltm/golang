load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "glfw",
    srcs = [
        "build.go",
        "c_glfw.go",
        "c_glfw_bsd.go",
        "c_glfw_darwin.go",
        "c_glfw_lin.go",
        "c_glfw_windows.go",
        "context.go",
        "error.c",
        "error.go",
        "glfw.go",
        "glfw_tree_rebuild.go",
        "input.c",
        "input.go",
        "monitor.c",
        "monitor.go",
        "native_darwin.go",
        "native_linbsd_x11.go",
        "native_windows.go",
        "time.go",
        "util.go",
        "vulkan.go",
        "window.c",
        "window.go",
    ],
    cgo = True,
    cdeps = ["@glfw//:glfw", "@glfw//:glfw_src",
            ":glfw_src"], # keep
    clinkopts = select({
        "@io_bazel_rules_go//go/platform:android": [
            "-lGL",
            "-lX11 -lXrandr -lXxf86vm -lXi -lXcursor -lm -lXinerama -ldl -lrt",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "-framework Cocoa -framework IOKit -framework CoreVideo",
            "-framework OpenGL",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "-framework Cocoa -framework IOKit -framework CoreVideo",
            "-framework OpenGL",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "-lGL",
            "-lX11 -lXrandr -lXxf86vm -lXi -lXcursor -lm -lXinerama -ldl -lrt",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "-lgdi32",
            "-lopengl32",
        ],
        "//conditions:default": [],
    }) + select({
       "@io_bazel_rules_go//go/platform:android_amd64": [
           "external/com_github_go_gl_glfw_v3_3_glfw/kafka/librdkafka_vendor/librdkafka_glibc_linux_amd64.a -lm -ldl -lpthread -lrt",
       ],
       "@io_bazel_rules_go//go/platform:android_arm64": [
           "external/com_github_confluentinc_confluent_kafka_go/kafka/librdkafka_vendor/librdkafka_glibc_linux_arm64.a -lm -ldl -lpthread -lrt",
       ],
       "@io_bazel_rules_go//go/platform:darwin_amd64": [
           "external/com_github_confluentinc_confluent_kafka_go/kafka/librdkafka_vendor/librdkafka_darwin_amd64.a -lm -lsasl2 -ldl -lpthread -framework CoreFoundation -framework SystemConfiguration",
       ],
       "@io_bazel_rules_go//go/platform:darwin_arm64": [
           "external/com_github_confluentinc_confluent_kafka_go/kafka/librdkafka_vendor/librdkafka_darwin_arm64.a -lm -lsasl2 -ldl -lpthread -framework CoreFoundation -framework SystemConfiguration",
       ],
       "@io_bazel_rules_go//go/platform:ios_amd64": [
           "external/com_github_confluentinc_confluent_kafka_go/kafka/librdkafka_vendor/librdkafka_darwin_amd64.a -lm -lsasl2 -ldl -lpthread -framework CoreFoundation -framework SystemConfiguration",
       ],
       "@io_bazel_rules_go//go/platform:ios_arm64": [
           "external/com_github_confluentinc_confluent_kafka_go/kafka/librdkafka_vendor/librdkafka_darwin_arm64.a -lm -lsasl2 -ldl -lpthread -framework CoreFoundation -framework SystemConfiguration",
       ],
       "@io_bazel_rules_go//go/platform:linux_amd64": [
           "/usr/lib/x86_64-linux-gnu/librdkafka.a -lm -ldl -lpthread -lrt",
       ],
       "@io_bazel_rules_go//go/platform:linux_arm64": [
           "external/com_github_confluentinc_confluent_kafka_go/kafka/librdkafka_vendor/librdkafka_glibc_linux_arm64.a -lm -ldl -lpthread -lrt",
       ],
       "//conditions:default": [],
    }),
    copts = select({
        "@io_bazel_rules_go//go/platform:android": [
            "-D_GLFW_X11 -D_GLFW_INVALID_CODEPOINT",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "-D_GLFW_COCOA -Wno-deprecated-declarations -D_GLFW_INVALID_CODEPOINT",
            "-x objective-c",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "-D_GLFW_COCOA -Wno-deprecated-declarations",
            "-x objective-c",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "-D_GLFW_X11 -D_GLFW_INVALID_CODEPOINT",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "-D_GLFW_WIN32 -D_GLFW_INVALID_CODEPOINT -Iglfw/deps/mingw",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/go-gl/glfw/v3.3/glfw",
    visibility = ["//visibility:public"],
)

alias(
    name = "go_default_library",
    actual = ":glfw",
    visibility = ["//visibility:public"],
)

