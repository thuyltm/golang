--- com_github_go_gl_glfw_v3_3_glfw/BUILD.bazel
+++ com_github_go_gl_glfw_v3_3_glfw/BUILD.bazel
@@ -28,6 +28,8 @@
         "window.go",
     ],
     cgo = True,
+    cdeps = [":glfw_src"], # keep
     clinkopts = select({
         "@io_bazel_rules_go//go/platform:android": [
             "-lGL",
@@ -80,3 +82,121 @@
     actual = ":glfw",
     visibility = ["//visibility:public"],
 )
+
+
+cc_library(
+    name = "glfw_src",
+    srcs = [
+        "glfw/src/context.c",
+        "glfw/src/egl_context.c",
+        "glfw/src/init.c",
+        "glfw/src/input.c",
+        "glfw/src/osmesa_context.c",
+        "glfw/src/monitor.c",
+        "glfw/src/vulkan.c",
+        "glfw/src/window.c",
+        "glfw/src/xkb_unicode.c",
+    ] + select({
+        "@platforms//os:windows": [
+            "glfw/src/win32_init.c",
+            "glfw/src/win32_joystick.c",
+            "glfw/src/win32_monitor.c",
+            "glfw/src/win32_thread.c",
+            "glfw/src/win32_time.c",
+            "glfw/src/win32_window.c",
+            "glfw/src/wgl_context.c",
+        ],
+        "@platforms//os:macos": [
+            "glfw/src/cocoa_time.c",
+            "glfw/src/posix_thread.c",
+        ],
+        "//conditions:default": [
+            "glfw/src/glx_context.c",
+            "glfw/src/linux_joystick.c",
+            "glfw/src/posix_thread.c",
+            "glfw/src/posix_time.c",
+            "glfw/src/x11_init.c",
+            "glfw/src/x11_monitor.c",
+            "glfw/src/x11_window.c",
+        ],
+    }),
+    hdrs = [
+        "glfw/include/GLFW/glfw3.h",
+        "glfw/include/GLFW/glfw3native.h",
+        "glfw/src/egl_context.h",
+        "glfw/src/internal.h",
+        "glfw/src/osmesa_context.h",
+        "glfw/src/mappings.h",
+        "glfw/src/xkb_unicode.h"
+    ] + select({
+        "@platforms//os:windows": [
+            "glfw/src/win32_joystick.h",
+            "glfw/src/win32_platform.h",
+            "glfw/src/wgl_context.h",
+        ],
+        "@platforms//os:macos": [
+            "glfw/src/cocoa_joystick.h",
+            "glfw/src/cocoa_platform.h",
+            "glfw/src/glx_context.h",
+            "glfw/src/nsgl_context.h",
+            "glfw/src/null_joystick.h",
+            "glfw/src/null_platform.h",
+            "glfw/src/posix_thread.h",
+            "glfw/src/wl_platform.h",
+        ],
+        "//conditions:default": [
+            "glfw/src/glx_context.h",
+            "glfw/src/linux_joystick.h",
+            "glfw/src/posix_thread.h",
+            "glfw/src/posix_time.h",
+            "glfw/src/x11_platform.h",
+        ],
+    }),
+    defines = select({
+        "@platforms//os:windows": [
+            "_GLFW_WIN32",
+        ],
+        "@platforms//os:macos": [
+            "_GLFW_COCOA",
+            "_GLFW_NSGL",
+            "_GLFW_NO_DLOAD_WINMM",
+            "_GLFW_USE_OPENGL",
+        ],
+        "//conditions:default": [
+            "_GLFW_HAS_XF86VM",
+            "_GLFW_X11",
+            "_GLFW_INVALID_CODEPOINT"
+        ],
+    }),
+    linkopts = select({
+        "@platforms//os:windows": [
+            "-DEFAULTLIB:user32.lib",
+            "-DEFAULTLIB:gdi32.lib",
+            "-DEFAULTLIB:shell32.lib",
+        ],
+        "@platforms//os:macos": [
+            "-framework OpenGL",
+            "-framework Cocoa",
+            "-framework IOKit",
+            "-framework CoreFoundation",
+        ],
+        "//conditions:default": [],
+    }),
+    deps = select({
+        "//conditions:default": [],
+    }),
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "glfw_header",
+    hdrs = [
+        "glfw/include/GLFW/glfw3.h",
+        "glfw/include/GLFW/glfw3native.h",
+    ],
+    deps = [
+        ":glfw_src",
+    ],
+    #strip_include_prefix = "include",
+    visibility = ["//visibility:public"],
+)
